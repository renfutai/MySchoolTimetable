1.ls 命令：列出目录内容 ls -l 更加详细 ls -a列出所有包括带.的隐藏文件
2.cd 进入或改变目录 cd .. 回到上一级 cd / 回到根目录
3.pwd 打印工作的路径
4.history 显示在终端所有的命令历史记录
5.mkdir 创建目录
6.touch将文件的访问和修改的时间更新为当前时间内容不变 没有这个文件就创建 
7.chmod命令 改变文件的权限 设置权限 4只读 只写 2 执行 1 可读可写可执行7 chmod 777 a.text
8.tar命令 解压文件
9.data显示时间
10.cat 连接连接两个或者更多文件 直接输出 只能文本
11.cp 复制命令 cp a.text  /User/vince/
12.mv移动 mv a.text  /User/vince/
13.rm删除 文件：指定被删除的文件列表，如果参数中含有目录，则必须加上-r或者-R选项。
14.向文件中添加内容 echo “****” > 文件名（替换）echo “****” >> 文件名（添加）
git
1.创建仓库 mkdir repository_git
2.进入仓库 cd repository_git
3.git init 初始化仓库 
4.添加文件 git add 文件位置
5.提交文件 git commit -m “new file add new line”（-m 加提交注释）

时光穿梭
6.掌握当前仓库的状态 git status
7.查看更改的信息 git diff 加文件名 （没提交之前）
8.显示提交过的信息 git log
9.显示到一行上的提交信息 git log --pretty=online
10.加退到上一个版本 git reset --hard HRAD^ (上上个就^^)
11.查看命令历史 以便确定回到哪一个版本 git reflog
12.回到那个版本通过命令历史的id git reset --hard id 可以前进后退
13.让文件回到最近一次git commit或者git add时的状态 git checkout 加文件名（可不用）
14.从版本库中删除该文件，并且git commit    git rm 加文件名
15.把误删除的文件恢复到最新版本 git checkout 加文件名（可不用）

分支管理
创建分支
16.创建分支 git branch 加分支名
17.切换分支 git checkout 加分支名
18.（16+17） 创建分支并切换分支 git checkout -b 加分支名
19.查看分支 带星号的为当前分支 git branch
20.把一个分支（dev）合并到master分支上 git merge dev 在master分支上执行
21.删除分支 git branch -d 加分支名

git和github关联
在.ssh下
生成密钥
ssh-keygen -t rsa -C “邮箱”
把生成的密钥：添加到github上：
打开C:\Users\赵光鑫\.ssh\id_rsa.pub文件
复制到github的ssh keys里面


在.ssh\目录下创建一个config文件，内容如下：
Host github.com
User git
Hostname ssh.github.com
PreferredAuthentications publickey
IdentityFile ~/.ssh/id_rsa
Port 443

测试是否通过
ssh -t git@github.com或ssh -T git@github.com

上传github远程仓库
git remote add origin git@github.com:2439323414/KodingKe.git
git push -u origin master


从远程仓库克隆
git clone git@github.com:michaelliao/gitskills.git




